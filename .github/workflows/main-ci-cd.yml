name: Monorepo CI/CD Pipeline

on:
  push:
    branches: [main, develop]
    paths:
      - 'apps/**'
      - 'pnpm-lock.yaml' 
  pull_request:
    branches: [main, develop]
    paths:
      - 'apps/**'
      - 'pnpm-lock.yaml'

permissions:
  contents: read 

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install-and-lint-all:
    name: Install Dependencies & Lint All Apps
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Monorepo Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Monorepo Lint
        run: pnpm lint || echo "Lint warnings ignored"

  frontend-ci:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    needs: install-and-lint-all 
    defaults:
      run:
        working-directory: ./apps/frontend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: ../../pnpm-lock.yaml

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Frontend Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Frontend Tests
        run: pnpm test

      - name: Build Frontend Application
        run: pnpm build
        env:
          VITE_API_BASE_URL: 'https://api.digitalshop.render.com'

  frontend-deploy:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: frontend-ci
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    defaults:
      run:
        working-directory: ./apps/frontend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: ../../pnpm-lock.yaml

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Vercel Deploy
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}

  backend-ci:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    needs: install-and-lint-all
    defaults:
      run:
        working-directory: ./apps/backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: ../../pnpm-lock.yaml

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Backend Dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run Backend Tests
        run: pnpm test

  backend-deploy:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: backend-ci
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    defaults:
      run:
        working-directory: ./apps/backend

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Disparar Deploy no Render
        run: |
          if [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "Erro: RENDER_SERVICE_ID não está configurado nos secrets."
            exit 1
          fi

          if [ -z "${{ secrets.RENDER_API_KEY }}" ]; then
            echo "Erro: RENDER_API_KEY não está configurado nos secrets."
            exit 1
          fi

          echo "Disparando redeploy para o serviço Render..."
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{}' \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys"
