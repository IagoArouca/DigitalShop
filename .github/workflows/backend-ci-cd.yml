name: Backend CI/CD (Render)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/backend/**' 
      - 'pnpm-lock.yaml' 
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'apps/backend/**'
      - 'pnpm-lock.yaml'

permissions:
  contents: read

jobs:
  ci:
    name: Build e Testes do Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/backend 

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: ./pnpm-lock.yaml

      - name: Instalar Dependências (Monorepo Root)
        run: pnpm install --no-frozen-lockfile
        working-directory: .
        env: 
          PNPM_HOME: ${{ runner.temp }}/.pnpm-home
          PATH: ${{ runner.temp }}/.pnpm-home:${{ env.PATH }}

      - name: Rodar Testes do Backend
        run: pnpm test

  deploy:
    name: Deploy para Render
    runs-on: ubuntu-latest
    needs: ci
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

    defaults:
      run:
        working-directory: ./apps/backend

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup pnpm for Deploy
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: ./pnpm-lock.yaml

      - name: Instalar Dependências (Monorepo Root)
        run: pnpm install --no-frozen-lockfile
        working-directory: .
        env: 
          PNPM_HOME: ${{ runner.temp }}/.pnpm-home
          PATH: ${{ runner.temp }}/.pnpm-home:${{ env.PATH }}

      - name: Disparar Deploy do Backend no Render
        run: |
          SERVICE_ID="${{ secrets.RENDER_SERVICE_ID }}"
          API_KEY="${{ secrets.RENDER_API_KEY }}"

          if [ -z "$SERVICE_ID" ]; then
            echo "Erro: RENDER_SERVICE_ID não configurado nos GitHub Secrets. Impossível disparar deploy."
            exit 1
          fi

          if [ -z "$API_KEY" ]; then
            echo "Erro: RENDER_API_KEY não configurado nos GitHub Secrets. Impossível disparar deploy."
            exit 1
          fi

          echo "Disparando redeploy para o serviço Render com ID: $SERVICE_ID"
          curl -X POST \
               -H "Authorization: Bearer $API_KEY" \
               "https://api.render.com/v1/services/$SERVICE_ID/deploys" \
               -H "Content-Type: application/json" \
               -d '{}'
