name: Frontend CI/CD (Vercel)

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'apps/frontend/**' 
      - 'pnpm-lock.yaml' 
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'apps/frontend/**'
      - 'pnpm-lock.yaml'

permissions:
  contents: read 
jobs:
  ci:
    name: Build e Testes do Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./apps/frontend 
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
      - name: Instalar Dependências (Monorepo Root)
        run: pnpm install --frozen-lockfile
        working-directory: .
        env: 
          PNPM_HOME: ${{ runner.temp }}/.pnpm-home
          PATH: ${{ runner.temp }}/.pnpm-home:${{ env.PATH }}

      - name: Rodar Testes do Frontend
        run: pnpm test

      - name: Buildar Aplicação Frontend
        run: pnpm build
        env:
          
          VITE_API_BASE_URL: 'https://api.digitalshop.render.com' 

  deploy:
    name: Deploy para Vercel
    runs-on: ubuntu-latest
    needs: ci 
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop') # Apenas deploy em push para main/develop

    defaults:
      run:
        working-directory: ./apps/frontend

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Instalar Dependências (Monorepo Root)
        run: pnpm install --frozen-lockfile
        working-directory: .
        env: 
          PNPM_HOME: ${{ runner.temp }}/.pnpm-home
          PATH: ${{ runner.temp }}/.pnpm-home:${{ env.PATH }}

      - name: Instalar Vercel CLI
        run: npm install -g vercel

      - name: Vercel Deploy
        run: vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }}
        